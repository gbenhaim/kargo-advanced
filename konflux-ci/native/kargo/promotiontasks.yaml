---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: build-cluster
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  - name: stageNormalized
    value: ${{ trimSuffix(ctx.stage, "-build") }}
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - commit: ${{ commitFrom(vars.repoURL, warehouse(ctx.targetFreight.origin.name)).ID }}
        path: ./src
      - branch: konflux-env/${{ vars.stageNormalized }}
        path: ./out
        # Create the branch if it does not exist.
        create: true
  # Following a "rendered branch" pattern, we delete all files in the
  # ./out directory to ensure that we only have the files that are
  # rendered from the Kustomize configuration in the ./src directory
  # of the repository after being rendered.
  - uses: git-clear
    config:
      path: ./out
  # Copy development into base
  - uses: copy
    config:
      inPath: ./src/konflux-ci/native/development
      outPath: ./src/konflux-ci/native/clusters/${{ vars.stageNormalized }}/base
  # Build the Kustomize configuration in the ./src directory using the env/<stage>
  # overlay to the ./out directory.
  - uses: kustomize-build
    config:
      path: ./src/konflux-ci/native/clusters/${{ vars.stageNormalized }}/build-service
      outPath: ./out/build-service
  # Build the Kustomize configuration in the ./src directory using the env/<stage>
  # overlay to the ./out directory.
  - uses: kustomize-build
    config:
      path: ./src/konflux-ci/native/clusters/${{ vars.stageNormalized }}/integration-service
      outPath: ./out/integration-service
  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./out
      message: "Promote konflux to ${{ vars.stageNormalized }}"
  # Push the changes to the Git repository.
  - uses: git-push
    config:
      path: ./out

---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote-konflux
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    as: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - commit: ${{ commitFrom(vars.repoURL, warehouse(ctx.targetFreight.origin.name)).ID }}
        path: ./src
        as: src

  - uses: yaml-update
    as: update-integration-service
    config:
      path: ./src/konflux-ci/native/clusters/${{ ctx.stage }}/integration-service/kustomization.yaml
      updates:
        - key: resources.0
          value: ${{ vars.repoURL }}/konflux-ci/native/development/integration-service?ref=${{ task.outputs['git-clone']['commits']['src'] }}

  - uses: yaml-update
    as: update-build-service
    config:
      path: ./src/konflux-ci/native/clusters/${{ ctx.stage }}/build-service/kustomization.yaml
      updates:
        - key: resources.0
          value: ${{ vars.repoURL }}/konflux-ci/native/development/build-service?ref=${{ task.outputs['git-clone']['commits']['src'] }}

  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./src
      message: "Promote Konflux ${{ ctx.stage }} to  ${{ task.outputs['git-clone']['commits']['src'] }}"
  # Push the changes to the Git repository.
  - uses: git-push
    config:
      path: ./src
      targetBranch: ${{ vars.branch }}

  - uses: argocd-update
    config:
      apps:
      - name: build-service-${{ ctx.stage }}
        sources:
        - repoURL: ${{ vars.repoURL }}
          #desiredRevision: ${{ task.outputs['commit'].commit }}
          #desiredRevision: main

      - name: integration-service-${{ ctx.stage }}
        sources:
        - repoURL: ${{ vars.repoURL }}
          #desiredRevision: ${{ task.outputs['commit'].commit }}
          #desiredRevision: main

---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote-to-development
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  - name: component
    value: ${{ ctx.targetFreight.origin.name }}
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    as: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - branch: main
        path: ./src
        as: src

  - uses: yaml-update
    as: update-component
    config:
      path: ./src/${{ vars.kustomizationPath }}
      updates:
        - key: resources.0
          value: ${{ vars.componentRepoURL }}/${{ vars.sourcePath }}?ref=${{ task.outputs['git-clone']['commits']['src'] }}


  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./src
      message: "${{ task.outputs['update-component']['commitMessage'] }}"
  # Push the changes to the Git repository.
  - uses: git-push
    as: push
    config:
      path: ./src
      # targetBranch: ${{ vars.component }}
      generateTargetBranch: true

  - uses: git-open-pr
    as: open-pr
    config:
      repoURL: ${{ vars.repoURL }}
      createTargetBranch: true
      sourceBranch: ${{ task.outputs.push.branch }}
      targetBranch: main

  - uses: git-wait-for-pr
    as: wait-for-pr
    config:
      repoURL: ${{ vars.repoURL }}
      prNumber: ${{ task.outputs['open-pr'].pr.id }}

---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote-component
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  - name: component
    value: ${{ ctx.targetFreight.origin.name }}
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    as: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - branch: main
        path: ./src
        as: src

  - uses: yaml-update
    as: update-component
    config:
      path: ./src/${{ vars.kustomizationPath }}
      updates:
        - key: resources.0
          value: ${{ vars.componentRepoURL }}/${{ vars.sourcePath }}?ref=${{ task.outputs['git-clone']['commits']['src'] }}


  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./src
      message: "${{ task.outputs['update-component']['commitMessage'] }}"
  # Push the changes to the Git repository.
  - uses: git-push
    as: push
    config:
      path: ./src
      targetBranch: ${{ vars.branch }}

---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote-component-with-copy
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  - name: destinationCluster
    value: ${{ trimSuffix(ctx.stage, "-promote") }}

  steps:
  - uses: compose-output
    as: component
    config:
      name: ${{ trimPrefix(ctx.targetFreight.origin.name, vars.fromCluster + "-") }}

  - uses: compose-output
    as: outPath
    config:
      path: konflux-ci/native/components/${{ task.outputs['component'].name }}/${{ vars.destinationCluster }}/base

  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    as: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - commit: ${{ commitFrom(vars.repoURL, warehouse(ctx.targetFreight.origin.name)).ID }}
        path: ./src
        as: src

  - uses: delete
    config:
      path: ./src/${{ task.outputs['outPath'].path }}

  - uses: copy
    as: update-component
    config:
      inPath: ./src/konflux-ci/native/components/${{ task.outputs['component'].name }}/${{ vars.fromCluster }}/base
      outPath: ./src/${{ task.outputs['outPath'].path }}

  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./src
      message: "Update component ${{ task.outputs['component'].name }} in cluster ${{ vars.destinationCluster }}"
  # Push the changes to the Git repository.
  - uses: git-push
    as: push
    config:
      path: ./src
      targetBranch: ${{ vars.branch }}

---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: deploy-cluster
spec:
  vars:
  - name: repoURL
    value: https://github.com/gbenhaim/kargo-advanced.git
  - name: branch
    value: main
  - name: cluster
    value: ${{ trimSuffix(ctx.targetFreight.origin.name, "-deploy") }}
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory, and the environment configuration to ./out.
  - uses: git-clone
    as: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - commit: ${{ commitFrom(vars.repoURL, warehouse(ctx.targetFreight.origin.name)).ID }}
        path: ./src
        as: src
    # trigger the sync of the argo application for component for $cluster
